/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories { // Sources of dependencies.
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation(libs.guava)
}

testing {
    suites {
        // Configure the built-in test suite
        withType<JvmTestSuite>().configureEach {
            useKotlinTest("2.1.20")
        }
        val intTest by registering(JvmTestSuite::class) {
            dependencies {
                implementation(project())
            }
        //    configurations {
        //        named(sources.implementationConfigurationName) {
        //            extendsFrom(getByName(JavaPlugin.IMPLEMENTATION_CONFIGURATION_NAME))
        //        }
        //    }
        }
        // Added the new test suite here:
        //val intTest by registering(JvmTestSuite::class) {
        //    dependencies {
        //        implementation('org.gradle:gradle-core:2.2')
        //    }
        //}        
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "to.marcospor.Minesweeper"
}
